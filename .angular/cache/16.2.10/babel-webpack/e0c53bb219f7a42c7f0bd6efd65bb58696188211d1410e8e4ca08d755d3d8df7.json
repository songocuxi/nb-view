{"ast":null,"code":"import { catchError, tap, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ValueService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  getValueList() {\n    let api = environment.urlNB + 'values';\n    return this.httpClient.get(api).pipe(tap(() => console.log('get value list succeccfully')), catchError(this.handleError));\n  }\n  createValue(value) {\n    let api = environment.urlNB + 'values';\n    return this.httpClient.post(api, value).pipe(tap(() => console.log('create value succeccfully')), catchError(this.handleError));\n  }\n  updateValue(value) {\n    let api = environment.urlNB + 'values';\n    return this.httpClient.patch(api, value).pipe(tap(() => console.log('update value succeccfully')), catchError(this.handleError));\n  }\n  getValueById(valueId) {\n    let api = environment.urlNB + `values/${valueId}`;\n    return this.httpClient.get(api).pipe(tap(() => console.log('get value by id')), catchError(this.handleError));\n  }\n  deleteValue(valueId) {\n    let api = environment.urlNB + `values/${valueId}`;\n    return this.httpClient.delete(api).pipe(tap(() => console.log('delete value by id')), catchError(this.handleError));\n  }\n  handleError(error) {\n    if (error.status === 0) {\n      console.error('An error occurred:', error.error);\n    } else {\n      console.error(`Backend returned code ${error.status}, body was: `, error.error);\n    }\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n  static #_ = this.ɵfac = function ValueService_Factory(t) {\n    return new (t || ValueService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ValueService,\n    factory: ValueService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["catchError","tap","throwError","environment","ValueService","constructor","httpClient","getValueList","api","urlNB","get","pipe","console","log","handleError","createValue","value","post","updateValue","patch","getValueById","valueId","deleteValue","delete","error","status","Error","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\hoc\\mon\\LV\\Làm\\New folder\\nb-view\\src\\app\\core\\services\\value\\value.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { catchError, tap, throwError } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Value } from '../../models/value';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ValueService {\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getValueList() {\r\n    let api: string = environment.urlNB + 'values';\r\n    return this.httpClient.get(api).pipe(\r\n      tap(() => console.log('get value list succeccfully')),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  createValue(value: any) {\r\n    let api: string = environment.urlNB + 'values';\r\n    return this.httpClient.post(api, value).pipe(\r\n      tap(() => console.log('create value succeccfully')),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  updateValue(value: any) {\r\n    let api: string = environment.urlNB + 'values';\r\n    return this.httpClient.patch(api, value).pipe(\r\n      tap(() => console.log('update value succeccfully')),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  getValueById(valueId: string) {\r\n    let api: string = environment.urlNB + `values/${valueId}`;\r\n    return this.httpClient.get(api).pipe(\r\n      tap(() => console.log('get value by id')),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  deleteValue(valueId: string) {\r\n    let api: string = environment.urlNB + `values/${valueId}`;\r\n    return this.httpClient.delete(api).pipe(\r\n      tap(() => console.log('delete value by id')),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.status === 0) {\r\n      console.error('An error occurred:', error.error);\r\n    } else {\r\n      console.error(\r\n        `Backend returned code ${error.status}, body was: `,\r\n        error.error\r\n      );\r\n    }\r\n    return throwError(\r\n      () => new Error('Something bad happened; please try again later.')\r\n    );\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,UAAU,EAAEC,GAAG,EAAEC,UAAU,QAAQ,MAAM;AAClD,SAASC,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,YAAY;EACvBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAe;EAE7CC,YAAYA,CAAA;IACV,IAAIC,GAAG,GAAWL,WAAW,CAACM,KAAK,GAAG,QAAQ;IAC9C,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAACF,GAAG,CAAC,CAACG,IAAI,CAClCV,GAAG,CAAC,MAAMW,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC,CAAC,EACrDb,UAAU,CAAC,IAAI,CAACc,WAAW,CAAC,CAC7B;EACH;EAEAC,WAAWA,CAACC,KAAU;IACpB,IAAIR,GAAG,GAAWL,WAAW,CAACM,KAAK,GAAG,QAAQ;IAC9C,OAAO,IAAI,CAACH,UAAU,CAACW,IAAI,CAACT,GAAG,EAAEQ,KAAK,CAAC,CAACL,IAAI,CAC1CV,GAAG,CAAC,MAAMW,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CAAC,EACnDb,UAAU,CAAC,IAAI,CAACc,WAAW,CAAC,CAC7B;EACH;EAEAI,WAAWA,CAACF,KAAU;IACpB,IAAIR,GAAG,GAAWL,WAAW,CAACM,KAAK,GAAG,QAAQ;IAC9C,OAAO,IAAI,CAACH,UAAU,CAACa,KAAK,CAACX,GAAG,EAAEQ,KAAK,CAAC,CAACL,IAAI,CAC3CV,GAAG,CAAC,MAAMW,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CAAC,EACnDb,UAAU,CAAC,IAAI,CAACc,WAAW,CAAC,CAC7B;EACH;EAEAM,YAAYA,CAACC,OAAe;IAC1B,IAAIb,GAAG,GAAWL,WAAW,CAACM,KAAK,GAAG,UAAUY,OAAO,EAAE;IACzD,OAAO,IAAI,CAACf,UAAU,CAACI,GAAG,CAACF,GAAG,CAAC,CAACG,IAAI,CAClCV,GAAG,CAAC,MAAMW,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAAC,EACzCb,UAAU,CAAC,IAAI,CAACc,WAAW,CAAC,CAC7B;EACH;EAEAQ,WAAWA,CAACD,OAAe;IACzB,IAAIb,GAAG,GAAWL,WAAW,CAACM,KAAK,GAAG,UAAUY,OAAO,EAAE;IACzD,OAAO,IAAI,CAACf,UAAU,CAACiB,MAAM,CAACf,GAAG,CAAC,CAACG,IAAI,CACrCV,GAAG,CAAC,MAAMW,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC,CAAC,EAC5Cb,UAAU,CAAC,IAAI,CAACc,WAAW,CAAC,CAC7B;EACH;EAEQA,WAAWA,CAACU,KAAwB;IAC1C,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;MACtBb,OAAO,CAACY,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACA,KAAK,CAAC;KACjD,MAAM;MACLZ,OAAO,CAACY,KAAK,CACX,yBAAyBA,KAAK,CAACC,MAAM,cAAc,EACnDD,KAAK,CAACA,KAAK,CACZ;;IAEH,OAAOtB,UAAU,CACf,MAAM,IAAIwB,KAAK,CAAC,iDAAiD,CAAC,CACnE;EACH;EAAC,QAAAC,CAAA,G;qBAvDUvB,YAAY,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZ5B,YAAY;IAAA6B,OAAA,EAAZ7B,YAAY,CAAA8B,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}